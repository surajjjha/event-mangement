{"ast":null,"code":"var _jsxFileName = \"C:\\\\js\\\\event mangement\\\\frontend\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './Signup.css'; // Import your CSS file\n\n// const Signup = () => {\n//   const [name, setName] = useState('');\n//   const [attendees, setAttendees] = useState([]);\n//   const [rsvpStatus, setRsvpStatus] = useState('Attending');\n\n//   const handleSignup = () => {\n//     if (name.trim() === '') {\n//       console.error('Name is required');\n//       return;\n//     }\n\n//     const newAttendee = { name, rsvpStatus };\n//     setAttendees((prevAttendees) => [...prevAttendees, newAttendee]);\n//     setName('');\n//     setRsvpStatus('Attending');\n//   };\n\n//   const toggleRsvpStatus = () => {\n//     setRsvpStatus((prevStatus) => (prevStatus === 'Attending' ? 'Not Attending' : 'Attending'));\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <h2 className=\"signup-heading\">Sign Up</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter your name\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//         className=\"signup-input\"\n//       />\n//       <div className=\"signup-buttons-container\">\n//         <button onClick={toggleRsvpStatus} className=\"signup-toggle-button\">\n//           RSVP {rsvpStatus === 'Attending' ? 'No' : 'Yes'}\n//         </button>\n//         <button onClick={handleSignup} className=\"signup-confirm-button\">\n//           Confirm RSVP\n//         </button>\n//       </div>\n//       <h3 className=\"signup-attendees-heading\">Attendees List</h3>\n//       <ul className=\"signup-attendees-list\">\n//         {attendees.map((attendee, index) => (\n//           <li key={index} className=\"signup-attendee-item\">\n//             {attendee.name} - {attendee.rsvpStatus}\n//           </li>\n//         ))}\n//       </ul>\n//       <p className=\"signup-total-attendees\">Total Attendees: {attendees.length}</p>\n//     </div>\n//   );\n// };\n\n// export default Signup;\nimport React, { useState } from 'react';\nimport './Signup.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = ({\n  eventId\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [attendees, setAttendees] = useState([]);\n  const [rsvpStatus, setRsvpStatus] = useState('Attending');\n\n  // Function to send new attendee data to backend\n  const handleSignup = async () => {\n    if (name.trim() === '') {\n      console.error('Name is required');\n      return;\n    }\n    const newAttendee = {\n      name,\n      rsvpStatus\n    };\n    try {\n      // POST request to the backend\n      const response = await fetch(`http://localhost:5000/events/${eventId}/attendees`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          attendee: newAttendee\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add attendee');\n      }\n      const updatedAttendees = await response.json(); // Get the updated list of attendees from backend\n\n      // Update the local list with the response from the backend\n      setAttendees(updatedAttendees);\n\n      // Clear the input field\n      setName('');\n      setRsvpStatus('Attending');\n    } catch (error) {\n      console.error('Error adding attendee:', error);\n    }\n  };\n  const toggleRsvpStatus = () => {\n    setRsvpStatus(prevStatus => prevStatus === 'Attending' ? 'Not Attending' : 'Attending');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"signup-heading\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      className: \"signup-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleRsvpStatus,\n        className: \"signup-toggle-button\",\n        children: [\"RSVP \", rsvpStatus === 'Attending' ? 'No' : 'Yes']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignup,\n        className: \"signup-confirm-button\",\n        children: \"Confirm RSVP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"signup-attendees-heading\",\n      children: \"Attendees List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"signup-attendees-list\",\n      children: attendees.map((attendee, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"signup-attendee-item\",\n        children: [attendee.name, \" - \", attendee.rsvpStatus]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"signup-total-attendees\",\n      children: [\"Total Attendees: \", attendees.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"lUOlNSAQ4ugqz4aZjnsdT6IcWjQ=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","eventId","_s","name","setName","attendees","setAttendees","rsvpStatus","setRsvpStatus","handleSignup","trim","console","error","newAttendee","response","fetch","method","headers","body","JSON","stringify","attendee","ok","Error","updatedAttendees","json","toggleRsvpStatus","prevStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","index","length","_c","$RefreshReg$"],"sources":["C:/js/event mangement/frontend/src/Signup.js"],"sourcesContent":["\r\n\r\n// import React, { useState } from 'react';\r\n// import './Signup.css'; // Import your CSS file\r\n\r\n// const Signup = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [attendees, setAttendees] = useState([]);\r\n//   const [rsvpStatus, setRsvpStatus] = useState('Attending');\r\n    \r\n//   const handleSignup = () => {\r\n//     if (name.trim() === '') {\r\n//       console.error('Name is required');\r\n//       return;\r\n//     }\r\n\r\n//     const newAttendee = { name, rsvpStatus };\r\n//     setAttendees((prevAttendees) => [...prevAttendees, newAttendee]);\r\n//     setName('');\r\n//     setRsvpStatus('Attending');\r\n//   };\r\n\r\n//   const toggleRsvpStatus = () => {\r\n//     setRsvpStatus((prevStatus) => (prevStatus === 'Attending' ? 'Not Attending' : 'Attending'));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"signup-container\">\r\n//       <h2 className=\"signup-heading\">Sign Up</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Enter your name\"\r\n//         value={name}\r\n//         onChange={(e) => setName(e.target.value)}\r\n//         className=\"signup-input\"\r\n//       />\r\n//       <div className=\"signup-buttons-container\">\r\n//         <button onClick={toggleRsvpStatus} className=\"signup-toggle-button\">\r\n//           RSVP {rsvpStatus === 'Attending' ? 'No' : 'Yes'}\r\n//         </button>\r\n//         <button onClick={handleSignup} className=\"signup-confirm-button\">\r\n//           Confirm RSVP\r\n//         </button>\r\n//       </div>\r\n//       <h3 className=\"signup-attendees-heading\">Attendees List</h3>\r\n//       <ul className=\"signup-attendees-list\">\r\n//         {attendees.map((attendee, index) => (\r\n//           <li key={index} className=\"signup-attendee-item\">\r\n//             {attendee.name} - {attendee.rsvpStatus}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       <p className=\"signup-total-attendees\">Total Attendees: {attendees.length}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\nimport React, { useState } from 'react';\r\nimport './Signup.css'; // Import your CSS file\r\n\r\nconst Signup = ({ eventId }) => {\r\n  const [name, setName] = useState('');\r\n  const [attendees, setAttendees] = useState([]);\r\n  const [rsvpStatus, setRsvpStatus] = useState('Attending');\r\n  \r\n  // Function to send new attendee data to backend\r\n  const handleSignup = async () => {\r\n    if (name.trim() === '') {\r\n      console.error('Name is required');\r\n      return;\r\n    }\r\n\r\n    const newAttendee = { name, rsvpStatus };\r\n\r\n    try {\r\n      // POST request to the backend\r\n      const response = await fetch(`http://localhost:5000/events/${eventId}/attendees`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ attendee: newAttendee }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add attendee');\r\n      }\r\n\r\n      const updatedAttendees = await response.json(); // Get the updated list of attendees from backend\r\n\r\n      // Update the local list with the response from the backend\r\n      setAttendees(updatedAttendees);\r\n\r\n      // Clear the input field\r\n      setName('');\r\n      setRsvpStatus('Attending');\r\n    } catch (error) {\r\n      console.error('Error adding attendee:', error);\r\n    }\r\n  };\r\n\r\n  const toggleRsvpStatus = () => {\r\n    setRsvpStatus((prevStatus) => (prevStatus === 'Attending' ? 'Not Attending' : 'Attending'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2 className=\"signup-heading\">Sign Up</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter your name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        className=\"signup-input\"\r\n      />\r\n      <div className=\"signup-buttons-container\">\r\n        <button onClick={toggleRsvpStatus} className=\"signup-toggle-button\">\r\n          RSVP {rsvpStatus === 'Attending' ? 'No' : 'Yes'}\r\n        </button>\r\n        <button onClick={handleSignup} className=\"signup-confirm-button\">\r\n          Confirm RSVP\r\n        </button>\r\n      </div>\r\n      <h3 className=\"signup-attendees-heading\">Attendees List</h3>\r\n      <ul className=\"signup-attendees-list\">\r\n        {attendees.map((attendee, index) => (\r\n          <li key={index} className=\"signup-attendee-item\">\r\n            {attendee.name} - {attendee.rsvpStatus}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"signup-total-attendees\">Total Attendees: {attendees.length}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}