{"ast":null,"code":"var _jsxFileName = \"C:\\\\js\\\\event mangement\\\\frontend\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// // import React, { useState } from 'react';\n\n// // const Signup = ({ eventId, onSuccess }) => {\n// //   const [name, setName] = useState('');\n\n// //   const handleSignup = async () => {\n// //     try {\n// //       await fetch(`http://localhost:5000/events/${eventId}/attendees`, {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({\n// //           attendee: { name, rsvpStatus: 'Attending' }, // Assuming default RSVP status as 'Attending'\n// //         }),\n// //       });\n\n// //       onSuccess(); // Refresh the attendees list\n// //     } catch (error) {\n// //       console.error('Error during signup:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Sign Up</h2>\n// //       <input\n// //         type=\"text\"\n// //         placeholder=\"Enter your name\"\n// //         value={name}\n// //         onChange={(e) => setName(e.target.value)}\n// //       />\n// //       <button onClick={handleSignup}>Confirm RSVP</button>\n// //     </div>\n// //   );\n// // };\n\n// // export default Signup;\n// // import React, { useState } from 'react';\n\n// // const Signup = () => {\n// //   const [name, setName] = useState('');\n// //   const [attendees, setAttendees] = useState([]);\n\n// //   const handleSignup = () => {\n// //     if (name.trim() === '') {\n// //       console.error('Name is required');\n// //       return;\n// //     }\n\n// //     // Create new attendee object\n// //     const newAttendee = { name, rsvpStatus: 'Attending' };\n\n// //     // Update the list of attendees\n// //     setAttendees((prevAttendees) => [...prevAttendees, newAttendee]);\n\n// //     // Clear the input field\n// //     setName('');\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Sign Up</h2>\n// //       <input\n// //         type=\"text\"\n// //         placeholder=\"Enter your name\"\n// //         value={name}\n// //         onChange={(e) => setName(e.target.value)}\n// //       />\n// //       <button onClick={handleSignup}>Confirm RSVP</button>\n// //       <h3>Attendees List</h3>\n// //       <ul>\n// //         {attendees.map((attendee, index) => (\n// //           <li key={index}>{attendee.name} - {attendee.rsvpStatus}</li>\n// //         ))}\n// //       </ul>\n// //       <p>Total Attendees: {attendees.length}</p>\n// //     </div>\n// //   );\n// // };\n\n// // export default Signup;\n\n// import React, { useState } from 'react';\n// import './Signup.css'; // Import your CSS file\n\n// const Signup = () => {\n//   const [name, setName] = useState('');\n//   const [attendees, setAttendees] = useState([]);\n//   const [rsvpStatus, setRsvpStatus] = useState('Attending');\n\n//   const handleSignup = () => {\n//     if (name.trim() === '') {\n//       console.error('Name is required');\n//       return;\n//     }\n\n//     const newAttendee = { name, rsvpStatus };\n//     setAttendees((prevAttendees) => [...prevAttendees, newAttendee]);\n//     setName('');\n//     setRsvpStatus('Attending');\n//   };\n\n//   const toggleRsvpStatus = () => {\n//     setRsvpStatus((prevStatus) => (prevStatus === 'Attending' ? 'Not Attending' : 'Attending'));\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <h2 className=\"signup-heading\">Sign Up</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter your name\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//         className=\"signup-input\"\n//       />\n//       <div className=\"signup-buttons-container\">\n//         <button onClick={toggleRsvpStatus} className=\"signup-toggle-button\">\n//           RSVP {rsvpStatus === 'Attending' ? 'No' : 'Yes'}\n//         </button>\n//         <button onClick={handleSignup} className=\"signup-confirm-button\">\n//           Confirm RSVP\n//         </button>\n//       </div>\n//       <h3 className=\"signup-attendees-heading\">Attendees List</h3>\n//       <ul className=\"signup-attendees-list\">\n//         {attendees.map((attendee, index) => (\n//           <li key={index} className=\"signup-attendee-item\">\n//             {attendee.name} - {attendee.rsvpStatus}\n//           </li>\n//         ))}\n//       </ul>\n//       <p className=\"signup-total-attendees\">Total Attendees: {attendees.length}</p>\n//     </div>\n//   );\n// };\n\n// export default Signup;\n\n// import React, { useState, useEffect } from 'react';\n// import './Signup.css';\n\n// const Signup = ({ eventId }) => {\n//   const [name, setName] = useState('');\n//   const [attendees, setAttendees] = useState([]); // Ensure this is an array, not undefined\n//   const [rsvpStatus, setRsvpStatus] = useState('Attending');\n\n//   // Fetch attendees from backend when the component mounts\n//   useEffect(() => {\n//     const fetchAttendees = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:5000/events/${eventId}/attendees`);\n//         const data = await response.json();\n//         setAttendees(data.attendees || []); // Ensure we set it to an array\n//       } catch (error) {\n//         console.error('Error fetching attendees:', error);\n//       }\n//     };\n\n//     fetchAttendees();\n//   }, [eventId]);\n\n//   const handleSignup = async () => {\n//     if (!eventId) {\n//       console.error('Event ID is required');\n//       return;\n//     }\n\n//     try {\n//       await fetch(`http://localhost:5000/events/${eventId}/attendees`, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           attendee: { name, rsvpStatus },\n//         }),\n//       });\n//       // Handle success\n//     } catch (error) {\n//       console.error('Error during signup:', error);\n//     }\n//   };\n\n//   const toggleRsvpStatus = () => {\n//     setRsvpStatus((prevStatus) => (prevStatus === 'Attending' ? 'Not Attending' : 'Attending'));\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <h2 className=\"signup-heading\">Sign Up</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter your name\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//         className=\"signup-input\"\n//       />\n//       <div className=\"signup-buttons-container\">\n//         <button onClick={toggleRsvpStatus} className=\"signup-toggle-button\">\n//           RSVP {rsvpStatus === 'Attending' ? 'No' : 'Yes'}\n//         </button>\n//         <button onClick={handleSignup} className=\"signup-confirm-button\">\n//           Confirm RSVP\n//         </button>\n//       </div>\n//       <h3 className=\"signup-attendees-heading\">Attendees List</h3>\n//       <ul className=\"signup-attendees-list\">\n//         {attendees.map((attendee, index) => (\n//           <li key={index} className=\"signup-attendee-item\">\n//             {attendee.name} - {attendee.rsvpStatus}\n//           </li>\n//         ))}\n//       </ul>\n//       <p className=\"signup-total-attendees\">Total Attendees: {attendees.length}</p>\n//     </div>\n//   );\n// };\n\n// export default Signup;\nconst Signup = ({\n  eventId\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [rsvpStatus, setRsvpStatus] = useState('Attending');\n  const handleSignup = async () => {\n    if (!eventId) {\n      console.error('Event ID is required');\n      return;\n    }\n    try {\n      await fetch(`http://localhost:5000/events/${eventId}/attendees`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          attendee: {\n            name,\n            rsvpStatus\n          }\n        })\n      });\n      // Handle success\n    } catch (error) {\n      console.error('Error during signup:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"signup-heading\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      className: \"signup-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleRsvpStatus,\n        className: \"signup-toggle-button\",\n        children: [\"RSVP \", rsvpStatus === 'Attending' ? 'No' : 'Yes']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignup,\n        className: \"signup-confirm-button\",\n        children: \"Confirm RSVP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"AaspD/9SAZZb6LBw2llQyXLH7EY=\");\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["Signup","eventId","_s","name","setName","useState","rsvpStatus","setRsvpStatus","handleSignup","console","error","fetch","method","headers","body","JSON","stringify","attendee","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","toggleRsvpStatus","_c","$RefreshReg$"],"sources":["C:/js/event mangement/frontend/src/Signup.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n\r\n// // const Signup = ({ eventId, onSuccess }) => {\r\n// //   const [name, setName] = useState('');\r\n\r\n// //   const handleSignup = async () => {\r\n// //     try {\r\n// //       await fetch(`http://localhost:5000/events/${eventId}/attendees`, {\r\n// //         method: 'POST',\r\n// //         headers: {\r\n// //           'Content-Type': 'application/json',\r\n// //         },\r\n// //         body: JSON.stringify({\r\n// //           attendee: { name, rsvpStatus: 'Attending' }, // Assuming default RSVP status as 'Attending'\r\n// //         }),\r\n// //       });\r\n\r\n// //       onSuccess(); // Refresh the attendees list\r\n// //     } catch (error) {\r\n// //       console.error('Error during signup:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Sign Up</h2>\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         placeholder=\"Enter your name\"\r\n// //         value={name}\r\n// //         onChange={(e) => setName(e.target.value)}\r\n// //       />\r\n// //       <button onClick={handleSignup}>Confirm RSVP</button>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Signup;\r\n// // import React, { useState } from 'react';\r\n\r\n// // const Signup = () => {\r\n// //   const [name, setName] = useState('');\r\n// //   const [attendees, setAttendees] = useState([]);\r\n  \r\n// //   const handleSignup = () => {\r\n// //     if (name.trim() === '') {\r\n// //       console.error('Name is required');\r\n// //       return;\r\n// //     }\r\n\r\n// //     // Create new attendee object\r\n// //     const newAttendee = { name, rsvpStatus: 'Attending' };\r\n    \r\n// //     // Update the list of attendees\r\n// //     setAttendees((prevAttendees) => [...prevAttendees, newAttendee]);\r\n\r\n// //     // Clear the input field\r\n// //     setName('');\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Sign Up</h2>\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         placeholder=\"Enter your name\"\r\n// //         value={name}\r\n// //         onChange={(e) => setName(e.target.value)}\r\n// //       />\r\n// //       <button onClick={handleSignup}>Confirm RSVP</button>\r\n// //       <h3>Attendees List</h3>\r\n// //       <ul>\r\n// //         {attendees.map((attendee, index) => (\r\n// //           <li key={index}>{attendee.name} - {attendee.rsvpStatus}</li>\r\n// //         ))}\r\n// //       </ul>\r\n// //       <p>Total Attendees: {attendees.length}</p>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Signup;\r\n\r\n// import React, { useState } from 'react';\r\n// import './Signup.css'; // Import your CSS file\r\n\r\n// const Signup = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [attendees, setAttendees] = useState([]);\r\n//   const [rsvpStatus, setRsvpStatus] = useState('Attending');\r\n    \r\n//   const handleSignup = () => {\r\n//     if (name.trim() === '') {\r\n//       console.error('Name is required');\r\n//       return;\r\n//     }\r\n\r\n//     const newAttendee = { name, rsvpStatus };\r\n//     setAttendees((prevAttendees) => [...prevAttendees, newAttendee]);\r\n//     setName('');\r\n//     setRsvpStatus('Attending');\r\n//   };\r\n\r\n//   const toggleRsvpStatus = () => {\r\n//     setRsvpStatus((prevStatus) => (prevStatus === 'Attending' ? 'Not Attending' : 'Attending'));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"signup-container\">\r\n//       <h2 className=\"signup-heading\">Sign Up</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Enter your name\"\r\n//         value={name}\r\n//         onChange={(e) => setName(e.target.value)}\r\n//         className=\"signup-input\"\r\n//       />\r\n//       <div className=\"signup-buttons-container\">\r\n//         <button onClick={toggleRsvpStatus} className=\"signup-toggle-button\">\r\n//           RSVP {rsvpStatus === 'Attending' ? 'No' : 'Yes'}\r\n//         </button>\r\n//         <button onClick={handleSignup} className=\"signup-confirm-button\">\r\n//           Confirm RSVP\r\n//         </button>\r\n//       </div>\r\n//       <h3 className=\"signup-attendees-heading\">Attendees List</h3>\r\n//       <ul className=\"signup-attendees-list\">\r\n//         {attendees.map((attendee, index) => (\r\n//           <li key={index} className=\"signup-attendee-item\">\r\n//             {attendee.name} - {attendee.rsvpStatus}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       <p className=\"signup-total-attendees\">Total Attendees: {attendees.length}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import './Signup.css';\r\n\r\n// const Signup = ({ eventId }) => {\r\n//   const [name, setName] = useState('');\r\n//   const [attendees, setAttendees] = useState([]); // Ensure this is an array, not undefined\r\n//   const [rsvpStatus, setRsvpStatus] = useState('Attending');\r\n\r\n//   // Fetch attendees from backend when the component mounts\r\n//   useEffect(() => {\r\n//     const fetchAttendees = async () => {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:5000/events/${eventId}/attendees`);\r\n//         const data = await response.json();\r\n//         setAttendees(data.attendees || []); // Ensure we set it to an array\r\n//       } catch (error) {\r\n//         console.error('Error fetching attendees:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchAttendees();\r\n//   }, [eventId]);\r\n\r\n//   const handleSignup = async () => {\r\n//     if (!eventId) {\r\n//       console.error('Event ID is required');\r\n//       return;\r\n//     }\r\n  \r\n//     try {\r\n//       await fetch(`http://localhost:5000/events/${eventId}/attendees`, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({\r\n//           attendee: { name, rsvpStatus },\r\n//         }),\r\n//       });\r\n//       // Handle success\r\n//     } catch (error) {\r\n//       console.error('Error during signup:', error);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const toggleRsvpStatus = () => {\r\n//     setRsvpStatus((prevStatus) => (prevStatus === 'Attending' ? 'Not Attending' : 'Attending'));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"signup-container\">\r\n//       <h2 className=\"signup-heading\">Sign Up</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Enter your name\"\r\n//         value={name}\r\n//         onChange={(e) => setName(e.target.value)}\r\n//         className=\"signup-input\"\r\n//       />\r\n//       <div className=\"signup-buttons-container\">\r\n//         <button onClick={toggleRsvpStatus} className=\"signup-toggle-button\">\r\n//           RSVP {rsvpStatus === 'Attending' ? 'No' : 'Yes'}\r\n//         </button>\r\n//         <button onClick={handleSignup} className=\"signup-confirm-button\">\r\n//           Confirm RSVP\r\n//         </button>\r\n//       </div>\r\n//       <h3 className=\"signup-attendees-heading\">Attendees List</h3>\r\n//       <ul className=\"signup-attendees-list\">\r\n//         {attendees.map((attendee, index) => (\r\n//           <li key={index} className=\"signup-attendee-item\">\r\n//             {attendee.name} - {attendee.rsvpStatus}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       <p className=\"signup-total-attendees\">Total Attendees: {attendees.length}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\nconst Signup = ({ eventId }) => {\r\n  const [name, setName] = useState('');\r\n  const [rsvpStatus, setRsvpStatus] = useState('Attending');\r\n\r\n  const handleSignup = async () => {\r\n    if (!eventId) {\r\n      console.error('Event ID is required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await fetch(`http://localhost:5000/events/${eventId}/attendees`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          attendee: { name, rsvpStatus },\r\n        }),\r\n      });\r\n      // Handle success\r\n    } catch (error) {\r\n      console.error('Error during signup:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2 className=\"signup-heading\">Sign Up</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter your name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        className=\"signup-input\"\r\n      />\r\n      <div className=\"signup-buttons-container\">\r\n        <button onClick={toggleRsvpStatus} className=\"signup-toggle-button\">\r\n          RSVP {rsvpStatus === 'Attending' ? 'No' : 'Yes'}\r\n        </button>\r\n        <button onClick={handleSignup} className=\"signup-confirm-button\">\r\n          Confirm RSVP\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,MAAM,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGF,QAAQ,CAAC,WAAW,CAAC;EAEzD,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACP,OAAO,EAAE;MACZQ,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;MACrC;IACF;IAEA,IAAI;MACF,MAAMC,KAAK,CAAC,gCAAgCV,OAAO,YAAY,EAAE;QAC/DW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAE;YAAEd,IAAI;YAAEG;UAAW;QAC/B,CAAC;MACH,CAAC,CAAC;MACF;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEQ,OAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BF,OAAA;MAAIC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CN,OAAA;MACEO,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAExB,IAAK;MACZyB,QAAQ,EAAGC,CAAC,IAAKzB,OAAO,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCR,SAAS,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFN,OAAA;MAAKC,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACvCF,OAAA;QAAQa,OAAO,EAAEC,gBAAiB;QAACb,SAAS,EAAC,sBAAsB;QAAAC,QAAA,GAAC,OAC7D,EAACd,UAAU,KAAK,WAAW,GAAG,IAAI,GAAG,KAAK;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACTN,OAAA;QAAQa,OAAO,EAAEvB,YAAa;QAACW,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAEjE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA9CIF,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}