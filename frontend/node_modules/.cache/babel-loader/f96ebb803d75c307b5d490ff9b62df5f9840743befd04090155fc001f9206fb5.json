{"ast":null,"code":"var _jsxFileName = \"C:\\\\js\\\\event mangement\\\\frontend\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const Signup = ({ eventId, onSuccess }) => {\n//   const [name, setName] = useState('');\n\n//   const handleSignup = async () => {\n//     try {\n//       await fetch(`http://localhost:5000/events/${eventId}/attendees`, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           attendee: { name, rsvpStatus: 'Attending' }, // Assuming default RSVP status as 'Attending'\n//         }),\n//       });\n\n//       onSuccess(); // Refresh the attendees list\n//     } catch (error) {\n//       console.error('Error during signup:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Sign Up</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter your name\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//       />\n//       <button onClick={handleSignup}>Confirm RSVP</button>\n//     </div>\n//   );\n// };\n\n// export default Signup;\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [attendees, setAttendees] = useState([]);\n  const handleSignup = () => {\n    if (name.trim() === '') {\n      console.error('Name is required');\n      return;\n    }\n\n    // Create new attendee object\n    const newAttendee = {\n      name,\n      rsvpStatus: 'Attending'\n    };\n\n    // Update the list of attendees\n    setAttendees(prevAttendees => [...prevAttendees, newAttendee]);\n\n    // Clear the input field\n    setName('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      children: \"Confirm RSVP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: attendees.map((attendee, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [attendee.name, \" - \", attendee.rsvpStatus]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"TSyPRSfCzU0GmTzAfJhu+6nAd5o=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","_s","name","setName","attendees","setAttendees","handleSignup","trim","console","error","newAttendee","rsvpStatus","prevAttendees","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","attendee","index","_c","$RefreshReg$"],"sources":["C:/js/event mangement/frontend/src/Signup.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const Signup = ({ eventId, onSuccess }) => {\r\n//   const [name, setName] = useState('');\r\n\r\n//   const handleSignup = async () => {\r\n//     try {\r\n//       await fetch(`http://localhost:5000/events/${eventId}/attendees`, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({\r\n//           attendee: { name, rsvpStatus: 'Attending' }, // Assuming default RSVP status as 'Attending'\r\n//         }),\r\n//       });\r\n\r\n//       onSuccess(); // Refresh the attendees list\r\n//     } catch (error) {\r\n//       console.error('Error during signup:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Sign Up</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Enter your name\"\r\n//         value={name}\r\n//         onChange={(e) => setName(e.target.value)}\r\n//       />\r\n//       <button onClick={handleSignup}>Confirm RSVP</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\nimport React, { useState } from 'react';\r\n\r\nconst Signup = () => {\r\n  const [name, setName] = useState('');\r\n  const [attendees, setAttendees] = useState([]);\r\n  \r\n  const handleSignup = () => {\r\n    if (name.trim() === '') {\r\n      console.error('Name is required');\r\n      return;\r\n    }\r\n\r\n    // Create new attendee object\r\n    const newAttendee = { name, rsvpStatus: 'Attending' };\r\n    \r\n    // Update the list of attendees\r\n    setAttendees((prevAttendees) => [...prevAttendees, newAttendee]);\r\n\r\n    // Clear the input field\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sign Up</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter your name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <button onClick={handleSignup}>Confirm RSVP</button>\r\n      \r\n      <ul>\r\n        {attendees.map((attendee, index) => (\r\n          <li key={index}>{attendee.name} - {attendee.rsvpStatus}</li>\r\n        ))}\r\n      </ul>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIJ,IAAI,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtBC,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;MACjC;IACF;;IAEA;IACA,MAAMC,WAAW,GAAG;MAAER,IAAI;MAAES,UAAU,EAAE;IAAY,CAAC;;IAErD;IACAN,YAAY,CAAEO,aAAa,IAAK,CAAC,GAAGA,aAAa,EAAEF,WAAW,CAAC,CAAC;;IAEhE;IACAP,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEJ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAElB,IAAK;MACZmB,QAAQ,EAAGC,CAAC,IAAKnB,OAAO,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAElB,YAAa;MAAAO,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEpDlB,OAAA;MAAAc,QAAA,EACGT,SAAS,CAACqB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B5B,OAAA;QAAAc,QAAA,GAAiBa,QAAQ,CAACxB,IAAI,EAAC,KAAG,EAACwB,QAAQ,CAACf,UAAU;MAAA,GAA7CgB,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvCID,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}